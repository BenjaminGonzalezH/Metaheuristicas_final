jaccard_extra
load("C:/Users/Benjamin Gonzalez/Desktop/Drive/Ayudantía de investigación/Proyecto-pareto/Proyecto-pareto/Ayudantía/R/.RData")
jaccard_extra
cluster_comparison_results
complete_solutions
View(complete_solutions)
View(cluster_comparison_results)
q()
setwd("C:/Users/benja/OneDrive/Escritorio/WorkSpace/Metaheuristicas_final/Results/Experimentals/Parte2_P")
setwd("C:/Users/Benjamin Gonzalez/Desktop/Workspace/Metaheuristicas_final/Results/Experimentals/Parte2_P")
Converge_SA <- read.csv("TS_converge_38.csv")
Converge_GA <- read.csv("GAcOXinv_H_converge_38.csv")
Converge_GA <- read.csv("GAeOXinv_H_converge_38.csv")
Converge_GA <- read.csv("GAeOXinv_H_converge_38.csv")
# Lista.
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 1
fin <- 50
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
View(Converge_SA)
View(Converge_GA)
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 1
fin <- 50
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
library(ggplot2)
library(dplyr)
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
Converge_GA <- read.csv("GAcOXinv_H_converge_38.csv")
Converge_GA <- read.csv("GAcOXinv_H_converge_38.csv")
# Lista.
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 1
fin <- 50
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
inicio <- 1
fin <- 100
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
Converge_GA <- read.csv("GAeOXinv_H_converge_38.csv")
# Lista.
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 1
fin <- 100
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
Converge_GA <- read.csv("GAeOXinv_H_converge_38.csv")
# Lista.
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 1
fin <- 100
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
inicio <- 250
fin <- 301
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
# Lista.
Converge_GA_list <- split(Converge_GA, Converge_GA$Iteration)
# Elementos a mostrar.
inicio <- 250
fin <- 302
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
Converge_GA <- read.csv("GAcOXinv_H_converge_38.csv")
# Elementos a mostrar.
inicio <- 250
fin <- 302
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
inicio <- 0
fin <- 50
# Filtrar el dataframe para obtener las iteraciones dentro del rango especificado
df_filtrado <- Converge_GA %>%
filter(Iteration >= inicio & Iteration <= fin) %>%
arrange(Iteration)
# Graficar boxplot para 'Error' por cada 'iteration'
ggplot(df_filtrado, aes(x = factor(Iteration), y = Error)) +
geom_boxplot(aes(fill = factor(Iteration)), alpha = 0.7) +
labs(
title = "Gráfico de convergencia GA clásico PBX-scramble(Shuffle)",
x = "Iteración",
y = "Error"
) +
theme_minimal() +
theme(legend.position = "none")
